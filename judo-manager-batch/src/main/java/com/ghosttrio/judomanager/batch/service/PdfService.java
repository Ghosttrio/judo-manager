package com.ghosttrio.judomanager.batch.service;import com.ghosttrio.judomanager.batch.feign.LoadUserClient;import com.ghosttrio.judomanager.batch.feign.model.response.User;import com.itextpdf.kernel.colors.ColorConstants;import com.itextpdf.kernel.font.PdfFont;import com.itextpdf.kernel.font.PdfFontFactory;import com.itextpdf.kernel.geom.PageSize;import com.itextpdf.kernel.pdf.PdfDocument;import com.itextpdf.kernel.pdf.PdfWriter;import com.itextpdf.kernel.pdf.canvas.draw.SolidLine;import com.itextpdf.layout.Document;import com.itextpdf.layout.element.Cell;import com.itextpdf.layout.element.LineSeparator;import com.itextpdf.layout.element.Paragraph;import com.itextpdf.layout.element.Table;import com.itextpdf.layout.properties.TextAlignment;import lombok.RequiredArgsConstructor;import org.springframework.cloud.client.circuitbreaker.CircuitBreakerFactory;import org.springframework.stereotype.Service;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.util.ArrayList;import java.util.Arrays;import java.util.List;@Service@RequiredArgsConstructorpublic class PdfService {    private final CircuitBreakerFactory circuitBreakerFactory;    private final LoadUserClient loadUserClient;    public byte[] createPdf() throws IOException {        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();        Document document = setPdfConfig(outputStream);        PdfFont customFont = createCustomFont();        createHeader(document, customFont);        createLine(document);        createContent(document, customFont);        document.close();        outputStream.close();        return outputStream.toByteArray();    }    private Document setPdfConfig(ByteArrayOutputStream outputStream) {        PdfWriter writer = new PdfWriter(outputStream);        PdfDocument pdfDoc = new PdfDocument(writer);        return new Document(pdfDoc, PageSize.A4);    }    private PdfFont createCustomFont() throws IOException {        return PdfFontFactory.createFont("/GowunBatang-Regular.ttf", PdfFontFactory.EmbeddingStrategy.PREFER_EMBEDDED);    }    private void createHeader(Document document, PdfFont customFont) {        String header = "테스트 헤더";        document.add(new Paragraph(header)                .setFont(customFont)                .setFontSize(20)  // H1 size                .setBold()                .setFontColor(ColorConstants.BLACK));    }    private void createLine(Document document) {        LineSeparator lineSeparator = new LineSeparator(new SolidLine(1f));        lineSeparator.setMarginTop(5);        document.add(lineSeparator);    }    private void createContent(Document document, PdfFont customFont) {//        CircuitBreaker cb = circuitBreakerFactory.create("circuitebreaker");//        List<User> users = cb.run(loadUserClient::findTodaySignupUser, throwable -> List.of(new User(0L, "test", "Test")));        List<User> users = Arrays.asList(new User(0L, "tEST", "TEST"));        createTable(users, document, customFont);    }    private void createTable(List<User> users, Document document, PdfFont customFont) {        float[] columnWidths = {100F, 100F, 100F};        document.add(new Paragraph("회원가입 유저정보")                .setFontSize(10)                .setBold()                .setFontColor(ColorConstants.BLACK)                .setFont(customFont));        Table table = new Table(columnWidths);        table.addHeaderCell(new Cell().add(new Paragraph("회원코드").setFont(customFont).setFontSize(10).setBold()));        table.addHeaderCell(new Cell().add(new Paragraph("메일").setFont(customFont).setFontSize(10).setBold()));        table.addHeaderCell(new Cell().add(new Paragraph("닉네임").setFont(customFont).setFontSize(10).setBold()));        for (User user : users) {            table.addCell(new Cell().add(new Paragraph(String.valueOf(user.userId())).setFont(customFont).setFontSize(8)));            table.addCell(new Cell().add(new Paragraph(user.email()).setFont(customFont).setFontSize(8)));            table.addCell(new Cell().add(new Paragraph(user.nickname()).setFont(customFont).setFontSize(8)));        }        table.setTextAlignment(TextAlignment.CENTER);        table.setMarginTop(5);        document.add(table);    }}