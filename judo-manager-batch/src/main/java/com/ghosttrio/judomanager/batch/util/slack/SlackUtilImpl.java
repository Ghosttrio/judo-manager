package com.ghosttrio.judomanager.batch.util.slack;import com.ghosttrio.judomanager.batch.common.properties.SlackProperties;import com.slack.api.methods.MethodsClient;import com.slack.api.methods.SlackApiException;import com.slack.api.methods.request.chat.ChatPostMessageRequest;import lombok.RequiredArgsConstructor;import org.springframework.stereotype.Component;import java.io.IOException;import java.time.LocalDateTime;import java.time.format.DateTimeFormatter;import java.util.Arrays;@Component@RequiredArgsConstructorpublic class SlackUtilImpl implements SlackUtil {    private final SlackProperties slackProperties;    private final MethodsClient methodsClient;    @Override    public void pdfSend(byte[] pdf) {        String date = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd"));        try {            methodsClient.filesUpload(r -> r                    .token(slackProperties.getToken())                    .initialComment("[*Judo Manager 일일 가입 유저 보고서*]")                    .channels(Arrays.asList(slackProperties.getChannel()))                    .filetype("pdf")                    .filename(date + "Users.pdf")                    .fileData(pdf)            );        } catch (IOException | SlackApiException e) {            throw new IllegalStateException("Slack API 호출 과정에서 오류가 생겼습니다.");        }    }    @Override    public void messageSend(String message) {        try {            methodsClient.chatPostMessage(ChatPostMessageRequest.builder().token(slackProperties.getToken())                    .channel(slackProperties.getChannel()).text(message).build());        } catch (IOException | SlackApiException e) {            e.printStackTrace();        }    }}